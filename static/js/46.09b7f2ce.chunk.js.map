{"version":3,"file":"static/js/46.09b7f2ce.chunk.js","mappings":"sOAIe,SAASA,EAAcC,GAAQ,IAGtCC,EAHsC,gMAI1CC,MAAQ,CAAEC,OAAQ,IAJwB,EAM1CC,eAAiB,SAAAD,GACf,EAAKE,SAAS,CAAEF,OAAQA,GACzB,EARyC,gDAU1C,WACE,OAAOG,KAAKJ,MAAMC,OAAOI,KAAI,SAAUC,GACrC,IAAMC,EAAe,sBAARD,EAAEE,EAA4B,OAASF,EAAEE,EACtD,OACE,iBAAKC,UAAU,aAAf,WACE,uBAAIF,IADN,aAESD,EAAEI,EAFX,aAEiBJ,EAAEK,EAFnB,aAEyBL,EAAEM,EAF3B,aAEiCN,EAAEO,EAFnC,OAAiCP,EAAEE,EAKtC,GACF,GApByC,oBAsB1C,WACE,OACE,SAAC,aAAD,WACE,4BACE,iBAAKC,UAAU,aAAf,2BACe,2CADf,KAEE,gBAAKA,UAAU,UAAf,SAA0BL,KAAKU,wBAEjC,SAAChB,EAAD,CAAQI,eAAgBE,KAAKF,qBAIpC,KAlCyC,GAGda,EAAAA,WAkC9B,SAASC,IACP,IAAMC,EAAaC,SAASC,eAAe,WACrCC,EAAYC,OAAOD,WAAa,CAAC,EACvCE,EAAAA,OACEP,EAAAA,cAAoBhB,EAAiBqB,GACrCH,EAEH,CAOD,OANKC,SAASC,eAAe,WAG3BH,IAFAE,SAASK,iBAAiB,mBAAoBP,GAKzCjB,CACR,CAtDiB,qBAAXsB,SAA2BA,OAAON,MAAQA,E","sources":["Dashboard/AddGridLayout.js"],"sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\ntypeof window !== \"undefined\" && (window.React = React); // for devtools\r\n\r\nexport default function AddGridLayout(Layout) {\r\n  // Basic layout that mirrors the internals of its child layout by listening to `onLayoutChange`.\r\n  // It does not pass any other props to the Layout.\r\n  class ListeningLayout extends React.Component {\r\n    state = { layout: [] };\r\n\r\n    onLayoutChange = layout => {\r\n      this.setState({ layout: layout });\r\n    };\r\n\r\n    stringifyLayout() {\r\n      return this.state.layout.map(function (l) {\r\n        const name = l.i === \"__dropping-elem__\" ? \"drop\" : l.i;\r\n        return (\r\n          <div className=\"layoutItem\" key={l.i}>\r\n            <b>{name}</b>\r\n            {`: [${l.x}, ${l.y}, ${l.w}, ${l.h}]`}\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <React.StrictMode>\r\n          <div>\r\n            <div className=\"layoutJSON\">\r\n              Displayed as <code>[x, y, w, h]</code>:\r\n              <div className=\"columns\">{this.stringifyLayout()}</div>\r\n            </div>\r\n            <Layout onLayoutChange={this.onLayoutChange} />\r\n          </div>\r\n        </React.StrictMode>\r\n      );\r\n    }\r\n  }\r\n\r\n  function run() {\r\n    const contentDiv = document.getElementById(\"content\");\r\n    const gridProps = window.gridProps || {};\r\n    ReactDOM.render(\r\n      React.createElement(ListeningLayout, gridProps),\r\n      contentDiv\r\n    );\r\n  }\r\n  if (!document.getElementById(\"content\")) {\r\n    document.addEventListener(\"DOMContentLoaded\", run);\r\n  } else {\r\n    run();\r\n  }\r\n\r\n  return ListeningLayout;\r\n}"],"names":["AddGridLayout","Layout","ListeningLayout","state","layout","onLayoutChange","setState","this","map","l","name","i","className","x","y","w","h","stringifyLayout","React","run","contentDiv","document","getElementById","gridProps","window","ReactDOM","addEventListener"],"sourceRoot":""}